generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["rhel-openssl-3.0.x"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String   @id @default(uuid()) @db.Uuid
  firstName     String
  lastName      String
  email         String   @unique
  role          String
  password      String
  referralCode  String?
  termsAccepted Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("users")
}

model PricingPlan {
  id           String    @id @default(cuid())
  name         String
  monthlyPrice Int
  yearlyPrice  Int
  description  String
  trialDays    Int
  badge        String?   @default("")
  highlighted  Boolean   @default(false)
  features     Feature[]
}

model Feature {
  id            String      @id @default(cuid())
  name          String
  included      Boolean
  tooltip       String?     @default("")
  pricingPlan   PricingPlan @relation(fields: [pricingPlanId], references: [id])
  pricingPlanId String
}

model Course {
  id           String     @id @default(cuid())
  title        String
  description  String
  image        String
  tags         String[]
  lessons      Int
  students     Int
  rating       Float
  instructor   Instructor @relation(fields: [instructorId], references: [id])
  instructorId String
  status       String
}

model Instructor {
  id      String   @id @default(cuid())
  name    String   @unique
  avatar  String
  courses Course[]
}

model Testimonial {
  id        Int      @id @default(autoincrement())
  name      String
  role      String
  content   String
  avatar    String
  date      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model BetaAccess {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  betaAccess Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
